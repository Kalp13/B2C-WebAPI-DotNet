<!doctype html>
<html lang="en-US">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- inject:css -->
    <!-- endinject -->
    <!-- removeIf(production) -->
    <link href="https://cdn.toolkit.lightstone.co.za/Lightstone.Design/v1/css/lightstone.css" rel="stylesheet" type="text/css" data-preload="true">
    <!-- endRemoveIf(production) -->
    <style>
        input,
        button,
        select,
        optgroup,
        textarea {
            width: 100%
        }

            input,
            textarea,
            select,
            input:focus,
            textarea:focus {
                border: 0px;
                border-bottom: 1px solid rgba(0, 53, 188, 0.1) !important;
                background-color: rgba(255, 255, 255) !important;
                font-family: var(--font-family-sans-serif,sans-serif);
                font-style: normal;
                font-weight: 300;
                color: var(--primary, #002072);
                font-size: 0.9375rem;
                letter-spacing: 0.002em;
                border-radius: 0;
                padding: 0.6rem;
            }

        select {
            padding-left: 6px;
        }

        option {
            font-family: var(--font-family-sans-serif,sans-serif);
            font-style: normal;
            font-weight: 400;
            color: var(--primary, #002072);
            text-transform: none;
            font-size: 0.9375rem;
        }

        input:focus,
        textarea:focus {
            outline: none;
            border-bottom: 1px solid rgb(0 32 114 / 0.5) !important;
            transition: all 0.3s linear;
        }

        label,
        input::placeholder,
        select {
            letter-spacing: 0.5px;
            text-transform: uppercase;
            color: #808FB8;
            font-size: 0.5625rem;
            font-family: var(--input-btn-font-family,sans-serif);
            font-style: normal;
            font-weight: 500;
        }

        a {
            color: var(--secondary, #439DEB);
        }

        label {
            display: none;
        }

        .logo {
            background-repeat: no-repeat !important;
            background-position: center !important;
            height: 4.312rem;
            width: 11.125rem;
            background-size: contain;
            margin-top: 0;
            padding-top: .15863rem;
            padding-bottom: .15863rem;
        }

        .left-col .content {
            flex: 1 0 auto;
            width: 100%
        }

        .right-col {
            overflow: hidden;
        }

        #api {
            width: 100%;
            min-height: 25vh;
            padding: 0 3%;
            display: flex;
            flex-direction: column;
            overflow-y: auto;
        }

            #api button {
                border-radius: 0.375rem;
                font-family: var(--input-btn-font-family,sans-serif);
                font-style: normal;
                font-weight: 500;
                font-size: 0.875rem;
                line-height: 1.25rem;
                width: 100%;
                margin: 0.5rem 0;
                padding: 0.75rem 0;
                color: #0033A0;
                border: 1.5px solid #0033A0;
                background: var(--white, #fff);
            }

            #api > .social {
                order: 2;
            }

            #api > .localAccount {
                order: 0;
                position: relative;
            }



                #api > .localAccount .password-label {
                    order: 2;
                    position: absolute;
                    right: 0;
                    bottom: -1rem;
                }

                #api > .localAccount #password {
                    margin-bottom: 1rem;
                    font: small-caption;
                    font-size: 1rem;
                    line-height: 1rem;
                    margin-top: -2rem;
                }

                #api > .localAccount .create p a {
                    padding-left: 0.5rem;
                }



            #api > .divider {
                order: 1;
                display: none;
            }

            #api .social button {
                box-sizing: border-box;
            }

            #api .localAccount button,
            #api .buttons #continue,
            #api button#email_ver_but_send,
            #api button#email_ver_but_verify {
                color: var(--white, #fff);
                border: none;
                background-color: var(--red, #da291c);
                border-radius: 0;
            }

            #api .buttons {
                margin-top: 2rem;
            }


                #api .buttons #continue,
                #api .buttons #cancel,
                #api .buttons #verifyCode,
                #api .buttons #verifyPhone {
                    background: none !important;
                    border: none;
                    padding: 0 !important;
                    font-family: var(--input-btn-font-family,sans-serif);
                    color: var(--secondary, #439DEB);
                    cursor: pointer;
                    text-align: left;
                    padding-left: 0.3rem !important;
                    text-decoration: none;
                    margin: 0;
                }

                #api .buttons #cancel {
                    margin-top: 2rem;
                    font-weight: 300;
                }

            #api .localAccount .create {
                text-align: center;
            }

            #api > .localAccount .create,
            #api > .localAccount #forgotPassword,
            #api > .localAccount #PasswordResetUsingEmailAddressExchange {
                letter-spacing: 0.5px;
                text-transform: uppercase;
                font-size: 0.5625rem;
                font-family: var(--input-btn-font-family,sans-serif);
                font-style: normal;
                font-weight: 500;
            }

            #api > .localAccount #PasswordResetUsingEmailAddressExchange {
                background: none;
                color: var(--secondary, #439DEB);
                padding: 0;
                margin: 0;
            }

                #api > .localAccount #PasswordResetUsingEmailAddressExchange:hover {
                    color: #0250cb;
                    text-decoration: underline;
                }

        .entry-item {
            display: flex;
            flex-direction: column;
            padding-top: 2rem;
            position: relative;
        }

        .rememberMe {
            display: none;
            flex-direction: row;
            align-items: flex-start;
        }

            .rememberMe label {
                display: initial;
            }

            .rememberMe input {
                flex: 0 0 2rem;
            }

        .left-col .help {
            text-transform: uppercase;
            font-size: 0.75rem;
            flex-shrink: 0;
            padding-left: 3%;
        }

        .divider {
            position: relative;
            width: 100%;
            content: unset;
            margin: 0.75rem 0;
            height: 1rem;
        }

            .divider::after {
                position: absolute;
                content: 'OR';
                width: 100%;
                text-align: center;
                font-family: var(--input-btn-font-family,sans-serif);
                font-style: normal;
                font-weight: 500;
                font-size: 0.5625rem;
                line-height: 1rem;
                letter-spacing: 0.2px;
                text-transform: uppercase;
            }

            .divider h2 {
                display: none;
            }

        .custom-intro {
            width: 100%;
            padding: 0 3%;
            display: flex;
            flex-direction: column;
            overflow-y: auto;
            font-size: 0.95rem;
        }

        .custom-intro,
        .social .intro,
        .intro {
            font-size: 0.95rem;
        }

        .attr ul {
            list-style-type: none;
        }

        .error[aria-hidden="true"] {
            display: none;
        }

        .helpLink {
            display: none;
        }

        #MicrosoftAccountExchange {
            background-image: url('https://cdn.toolkit.lightstone.co.za/Lightstone.Design/v1/images/Microsoft.png') !important;
            background-repeat: no-repeat !important;
            background-position: 1rem !important;
        }

        #GoogleExchange {
            background-image: url('https://cdn.toolkit.lightstone.co.za/Lightstone.Design/v1/images/Google.png') !important;
            background-repeat: no-repeat !important;
            background-position: 1rem !important;
        }

        #attributeVerification ul {
            padding-inline-start: 0;
        }

        button:disabled {
            display: none;
        }

        form label#email_ver_input_label {
            display: none !important;
        }

        #verifying_blurb {
            border-radius: 1rem;
            background-color: #ffffff;
            padding: 3rem;
        }

        .entry-item .error.itemLevel {
            padding-bottom: 1rem;
        }

        .phoneNumbers {
            font-size: 0.9rem;
            margin-bottom: 2rem;
        }

            .phoneNumbers .type {
                display: none;
            }

        .actionLabel label {
            display: inline-block;
        }

        #retryCode {
            letter-spacing: 0.5px;
            text-transform: uppercase;
            color: var(--secondary, #439DEB);
            font-size: 0.5625rem;
            font-family: var(--input-btn-font-family,sans-serif);
            font-style: normal;
            font-weight: 500;
            cursor: pointer;
        }

        #api ul li {
            list-style-type: none;
        }

        #contactMethod_label {
            display: inline;
        }
            #contactMethod_label::after {
                content: "\A";
                white-space: pre;
            }
        #sms_option,
        #whatsapp_option {
            display: inline;
            padding-left: 0.5rem;
        }

            #sms_option::after,
            #whatsapp_option::after {
                content: "\A";
                white-space: pre;
            }

        #contactMethod_whatsapp,
        #contactMethod_sms {
            display: inline;
            width: unset;
            vertical-align: middle;
        }
        .iti__country {
            display: list-item !important;
        }
    </style>
    <title>Login to Lightstone</title>
</head>

<body>
    <main>
        <div id="header" w3-include-html="https://localhost:5000/header.html"></div>
        <div class="container">
            <div class="row no-gutters">
                <div class="col offset-md-3  col-lg-6 col-xl-6 left-col d-flex flex-column">
                    <div class="content">
                        <a class="navbar-brand logo my-4 mx-auto d-block order-md-2" href="https://lightstone.co.za/"> </a>
                        <div class="custom-intro">
                            <h2><strong>Verify that it is you</strong></h2>
                        </div>
                        <div id="api" data-name="Unified">

                        </div>
                    </div>
                </div>
                <div class="col col-lg-6 col-xl-6 d-none  right-col text-right">
                    <div id="side-content" w3-include-html="https://localhost:5000/side-content.html"></div>
                </div>
            </div>
            <div class="row mb-5 mt-5">
                <div class="col-md-6 offset-md-3">
                    <img src="https://cdn.toolkit.lightstone.co.za/Lightstone.Design/v1/images/LightstoneLine.png" alt="Logo" class="mx-auto d-block img-fluid" />
                </div>
            </div>
        </div>

        <div id="footer" w3-include-html="https://localhost:5000/footer.html"></div>
    </main>
    <script type="text/javascript" src="https://localhost:5000/js/includeHTML.js"></script>
    <script type="text/javascript" src="https://cdn.toolkit.lightstone.co.za/Lightstone.Design/v1/vendor/intl-tel-input/js/intlTelInput.js"></script>
    <script type="text/javascript" src="https://unpkg.com/libphonenumber-js@1.10.24/bundle/libphonenumber-max.js"></script>


    <script>
        var iti;
        var lip;

        function setupUi() {
            //hide country code
            document.getElementById('mfaCountryCode').style.visibility = 'hidden';
            //hide the change button
            if (document.getElementById('phoneVerificationControl-readOnly_but_change_claims') !== null) {
                document.getElementById('phoneVerificationControl-readOnly_but_change_claims').style.visibility = 'hidden';
                continueLogin();
            }
            if (document.getElementById('phoneVerificationControl_but_change_claims') !== null) {
                document.getElementById('phoneVerificationControl_but_change_claims').style.visibility = 'hidden';
            }


            if (document.getElementById('mfaPhoneNumber') == null) {
                setTimeout(() => setupUi(), 2000);
            }
            else {

                document.getElementById('mfaPhoneNumber').hidden = true;
                let div = document.createElement('div');
                let intelInputElement = document.createElement('input');
                intelInputElement.id = 'phoneNumner';
                intelInputElement.name = 'phoneNumner';
                intelInputElement.type = 'tel';
                intelInputElement.className = 'textInput';
                div.append(intelInputElement);
                document.querySelector('.TextBox.Phone > .attrEntry').append(div);

                checkIfReady();
            }
        }

        function continueLogin() {
            //hide button and continue login
            // document.getElementById('continue').style.visibility = 'hidden';
            document.getElementById("continue").click();
        }


        function configure() {
            iti = intlTelInput(document.getElementById('phoneNumner'), {
                initialCountry: "za",
                preferredCountries: ['za']
            });

            document.getElementById('phoneNumner').addEventListener('countrychange', function () {
                setNumber();
                validateNumber();
            });

            document.getElementById('phoneNumner').addEventListener('change', function () {
                setNumber();
                validateNumber();
            });

            document.getElementById('phoneNumner').addEventListener('keyup', function () {
                setNumber();
                validateNumber();
            });

            setNumber();
        }

        function setNumber() {
            var number = iti.telInput.value;
            if (number.indexOf('0') === 0) {
                number = number.substring(1, number.length);
                document.getElementById('phoneNumner').value = number;
            }
            document.getElementById('mfaPhoneNumber').value = '+' + iti.getSelectedCountryData().dialCode + number;

            //Set the country code
            document.getElementById('mfaCountryCode').value = iti.getSelectedCountryData().iso2;

        }

        function validateNumber() {
            document.getElementById('phoneVerificationControl_but_send_code').style.visibility = 'hidden';
            let isValidForCountry = libphonenumber.isValidPhoneNumber(document.getElementById('phoneNumner').value, iti.getSelectedCountryData().iso2.toUpperCase())
            let numberLeng = Math.ceil(Math.log10(document.getElementById('phoneNumner').value));

            if (isValidForCountry) {
                if (iti.getSelectedCountryData().iso2.toUpperCase() == "ZA" && numberLeng < 9) {
                    showInValidNumberStyle();
                } else {
                    showValidNumberStyle();
                }
            } else {
                showInValidNumberStyle();
            }
        }

        function showInValidNumberStyle() {
            document.getElementsByClassName("intro")[0].textContent = 'Please provide a valid number ';
            document.getElementsByClassName("intro")[0].style.color = 'red'
            document.getElementById("phoneNumner").style.color = 'red'
            document.getElementById('phoneVerificationControl_but_verify_code').style.visibility = 'hidden';
            document.getElementById('phoneVerificationControl_but_send_new_code').style.visibility = 'hidden';
        }
        function showValidNumberStyle() {
            document.getElementById('phoneVerificationControl_but_send_code').style.visibility = 'visible';
            document.getElementsByClassName("intro")[0].style.color = '#002072'
            document.getElementById("phoneNumner").style.color = '#002072'
            document.getElementById('phoneVerificationControl_but_verify_code').style.visibility = 'visible';
            document.getElementById('phoneVerificationControl_but_send_new_code').style.visibility = 'visible';
        }

        function checkIfReady() {
            try {
                configure();
            } catch {
                setTimeout(() => {
                    checkIfReady();
                }, 100);
            }
        }

        function isSignUpReadyForLogin() {

            //this is for the register of new user
            //$('#phoneVerificationControl_code_sent_message').attr("aria-hidden")
            if ($('#phoneVerificationControl_code_sent_message').attr("aria-hidden") == 'true' && document.getElementById('phoneVerificationControl_but_verify_code').style.display == 'none' && document.getElementById('phoneVerificationControl_but_send_code').style.display == 'none' && document.getElementById("continue") !== undefined) {
                continueLogin();
            } else {
                setTimeout(() => checkIfSignUpIsReady(), 500);
            }
        }

        function checkIfSignUpIsReady() {
            try {
                isSignUpReadyForLogin();
            } catch {
                setTimeout(() => {
                    isSignUpReadyForLogin();
                }, 100);
            }
        }

        setupUi();
        checkIfSignUpIsReady();
    </script>
</body>

</html>